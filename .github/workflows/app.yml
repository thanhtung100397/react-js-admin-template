name: App workflow
on:
  push:
    branches:
      - '**'
jobs:
  test:
    name: Run test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: '10.16.3'

      - uses: actions/checkout@v2

      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install --frozen-lockfile --prefer-offline
      - run: yarn test --ci

  dockerize_production:
    name: Dockerize production
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2

      - id: vars
        run: echo "::set-output name=image_tag::production-$(git rev-parse --short HEAD)"

      - uses: docker/setup-qemu-action@v1

      - uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: adn97/react-js-admin-template:${{ steps.vars.outputs.image_tag }},adn97/react-js-admin-template:latest
          build-args: ENV=production

      - run: echo ${{ steps.docker_build.outputs.digest }}

  deploy_production:
    name: Deploy production
    runs-on: ubuntu-latest
    needs: [dockerize_production]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2

      - id: vars
        run: echo "::set-output name=image_tag::production-$(git rev-parse --short HEAD)"

      - uses: appleboy/scp-action@master
        with:
          host: 18.140.198.153
          username: anhnd
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: docker-compose.yml
          target: /home/anhnd/react-js-admin-template/

      - uses: appleboy/ssh-action@master
        with:
          host: 18.140.198.153
          username: anhnd
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: export image_tag=${{ steps.vars.outputs.image_tag }} && cd /home/anhnd/react-js-admin-template/ && docker-compose up -d


